var md=require("matchdep");module.exports=function(grunt){"use strict";var gruntfile="Gruntfile.js";var sources=["src/<%= pkg.name %>.js"];md.filterDev("grunt-*").forEach(grunt.loadNpmTasks);grunt.initConfig({pkg:grunt.file.readJSON("package.json"),meta:{banner:"/*! <%= pkg.title || pkg.name %> - v<%= pkg.version %> - "+'<%= grunt.template.today("yyyy-mm-dd") %>\n'+'<%= pkg.homepage ? "* " + pkg.homepage + "\\n" : "" %>'+"* Copyright (c) 2013 Deux Huit Huit, Rik Lomas.\n"+'* Copyright (c) <%= grunt.template.today("yyyy") %> <%= pkg.author.name %> (<%= pkg.author.url %>);\n'+"* License <%= pkg.license %> http://deuxhuithuit.mit-license.org */"},concat:{options:{process:true,banner:"<%= meta.banner %>\n"},dist:{src:sources,dest:"dist/<%= pkg.name %>.js"}},watch:{files:sources.concat(gruntfile),tasks:["dev"]},jshint:{files:sources.concat(gruntfile),options:{curly:true,eqeqeq:false,immed:false,latedef:false,newcap:false,nonew:true,noarg:true,sub:true,undef:true,eqnull:true,browser:true,regexp:true,strict:true,trailing:false,smarttabs:true,lastsemic:true,globals:{console:true,jQuery:true,JSON:true,module:true,global:true}}},uglify:{prod:{files:{"dist/<%= pkg.name %>.min.js":"<%= concat.dist.dest %>"}},options:{banner:"<%= meta.banner %>",report:"gzip",sourceMap:"dist/<%= pkg.name %>.min.js.map",sourceMappingURL:"<%= pkg.name %>.min.js.map",sourceMapRoot:"../",mangle:true,compress:{global_defs:{DEBUG:false},dead_code:true,unused:true,warnings:true}}},complexity:{generic:{src:sources,options:{errorsOnly:false,cyclomatic:10,halstead:22,maintainability:95}}}});grunt.registerTask("fix-source-map","Fix the wrong file path in the source map",function(){var sourceMapPath=grunt.template.process("<%= uglify.options.sourceMap %>");var sourceMapUrl=grunt.template.process("<%= uglify.options.sourceMappingURL %>");var diff=sourceMapPath.replace(sourceMapUrl,"");var sourceMap=grunt.file.readJSON(sourceMapPath);sourceMap.file=sourceMap.file.replace(diff,"");var newSources=[];sourceMap.sources.forEach(function(elem){newSources.push(elem.replace(diff,""))});sourceMap.sources=newSources;grunt.log.write(sourceMap.sources);grunt.file.write(sourceMapPath,JSON.stringify(sourceMap))});grunt.registerTask("dev",["jshint","complexity"]);grunt.registerTask("build",["concat","uglify","fix-source-map"]);grunt.registerTask("default",["dev","build"])};